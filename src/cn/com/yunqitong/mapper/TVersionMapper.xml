<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.yunqitong.mapper.TVersionMapper" >
  <resultMap id="BaseResultMap" type="cn.com.yunqitong.domain.TVersion" >
    <id column="name" property="name" jdbcType="VARCHAR" />
    <result column="firewirename" property="firewirename" jdbcType="VARCHAR" />
    <result column="apppath" property="apppath" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="firewiresize" property="firewiresize" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="platform" property="platform" jdbcType="VARCHAR" />
    <result column="filemd5" property="filemd5" jdbcType="VARCHAR" />
    <result column="build" property="build" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.com.yunqitong.domain.TVersion" extends="BaseResultMap" >
    <result column="file" property="file" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    name, firewirename, apppath, createtime, firewiresize, remark, platform, filemd5, build
  </sql>
  <sql id="Blob_Column_List" >
    file
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.com.yunqitong.domain.TVersionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.yunqitong.domain.TVersionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_version
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_version
    where name = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.yunqitong.domain.TVersionExample" >
    delete from t_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.yunqitong.domain.TVersion" >
    insert into t_version (name, firewirename, apppath, 
      createtime, firewiresize, remark, 
      platform, filemd5, file, build
      )
    values (#{name,jdbcType=VARCHAR}, #{firewirename,jdbcType=VARCHAR}, #{apppath,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{firewiresize,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{platform,jdbcType=VARCHAR}, #{filemd5,jdbcType=VARCHAR}, #{file,jdbcType=LONGVARBINARY}, #{build,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.yunqitong.domain.TVersion" >
    insert into t_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        name,
      </if>
      <if test="firewirename != null" >
        firewirename,
      </if>
      <if test="apppath != null" >
        apppath,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="firewiresize != null" >
        firewiresize,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="filemd5 != null" >
        filemd5,
      </if>
      <if test="file != null" >
        file,
      </if>
      <if test="build != null" >
        build,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="firewirename != null" >
        #{firewirename,jdbcType=VARCHAR},
      </if>
      <if test="apppath != null" >
        #{apppath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="firewiresize != null" >
        #{firewiresize,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=VARCHAR},
      </if>
      <if test="filemd5 != null" >
        #{filemd5,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        #{file,jdbcType=LONGVARBINARY},
      </if>
      <if test="build != null" >
        #{build,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.yunqitong.domain.TVersionExample" resultType="java.lang.Integer" >
    select count(*) from t_version
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_version
    <set >
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.firewirename != null" >
        firewirename = #{record.firewirename,jdbcType=VARCHAR},
      </if>
      <if test="record.apppath != null" >
        apppath = #{record.apppath,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.firewiresize != null" >
        firewiresize = #{record.firewiresize,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=VARCHAR},
      </if>
      <if test="record.filemd5 != null" >
        filemd5 = #{record.filemd5,jdbcType=VARCHAR},
      </if>
      <if test="record.file != null" >
        file = #{record.file,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.build != null" >
        build = #{record.build,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_version
    set name = #{record.name,jdbcType=VARCHAR},
      firewirename = #{record.firewirename,jdbcType=VARCHAR},
      apppath = #{record.apppath,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      firewiresize = #{record.firewiresize,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      filemd5 = #{record.filemd5,jdbcType=VARCHAR},
      build = #{record.build,jdbcType=VARCHAR},
      file = #{record.file,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_version
    set name = #{record.name,jdbcType=VARCHAR},
      firewirename = #{record.firewirename,jdbcType=VARCHAR},
      apppath = #{record.apppath,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      firewiresize = #{record.firewiresize,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      platform = #{record.platform,jdbcType=VARCHAR},
      build = #{record.build,jdbcType=VARCHAR},
      filemd5 = #{record.filemd5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.yunqitong.domain.TVersion" >
    update t_version
    <set >
      <if test="firewirename != null" >
        firewirename = #{firewirename,jdbcType=VARCHAR},
      </if>
      <if test="apppath != null" >
        apppath = #{apppath,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="firewiresize != null" >
        firewiresize = #{firewiresize,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=VARCHAR},
      </if>
      <if test="filemd5 != null" >
        filemd5 = #{filemd5,jdbcType=VARCHAR},
      </if>
      <if test="build != null" >
        build = #{build,jdbcType=VARCHAR},
      </if>
      <if test="file != null" >
        file = #{file,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.yunqitong.domain.TVersion" >
    update t_version
    set firewirename = #{firewirename,jdbcType=VARCHAR},
      apppath = #{apppath,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      firewiresize = #{firewiresize,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      filemd5 = #{filemd5,jdbcType=VARCHAR},
      build = #{build,jdbcType=VARCHAR},
      file = #{file,jdbcType=LONGVARBINARY}
    where name = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.yunqitong.domain.TVersion" >
    update t_version
    set firewirename = #{firewirename,jdbcType=VARCHAR},
      apppath = #{apppath,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      firewiresize = #{firewiresize,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      platform = #{platform,jdbcType=VARCHAR},
      build = #{build,jdbcType=VARCHAR},
      filemd5 = #{filemd5,jdbcType=VARCHAR}
    where name = #{name,jdbcType=VARCHAR}
  </update>
  
   <select id="selectNewVersionByPLATFORM" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_version
    where platform = #{platform,jdbcType=VARCHAR} order by createtime desc limit 0,1 ;
  </select>
</mapper>